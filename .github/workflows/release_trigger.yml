name: Build & publish Dockers on Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  kafka_connect_transforms:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        ref: ${{ github.ref }}
        java-version: 11

    - name: Setup branch and env
      run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ env.BRANCH_NAME }}

    - name: Build with Maven
      run: |
        cd build/es-kafka-connecter
        cd kafka_connect_transforms ; mvn -B clean package -DskipTests ; cd ..
        mkdir jars; cd jars
        cp ../kafka_connect_transforms/target/kafka_connect_transforms*.jar .
        wget https://repo.maven.apache.org/maven2/io/debezium/debezium-core/1.7.0.Final/debezium-core-1.7.0.Final.jar

    - name: Log into registry
      run: echo "${{ secrets.release_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin

    - name: Create Docker
      run: |
        NAMESPACE=${{ secrets.dev_namespace_docker_hub }}
        SERVICE_NAME=cp-kafka-connect-es
        IMAGE_ID=$NAMESPACE/$SERVICE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        if [[ ${{ env.BRANCH_NAME }} == main || ${{ env.BRANCH_NAME }} == master ]]; then
          VERSION=latest
        else
          VERSION=${{ env.BRANCH_NAME }}
        fi
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        cd build/es-kafka-connecter
        docker build . -t $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
  debezium-fixer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup branch and env
      run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

    - name: Log into registry
      run: echo "${{ secrets.release_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin

    - name: Create Docker
      run: |
        NAMESPACE=${{ secrets.dev_namespace_docker_hub }}
        SERVICE_NAME=debezium-fixer
        IMAGE_ID=$NAMESPACE/$SERVICE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        if [[ ${{ env.BRANCH_NAME }} == main || ${{ env.BRANCH_NAME }} == master ]]; then
          VERSION=latest
        else
          VERSION=${{ env.BRANCH_NAME }}
        fi
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        cd build/debezium-fixer
        docker build . -t $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
  reporting-init-debezium:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup branch and env
      run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

    - name: Log into registry
      run: echo "${{ secrets.release_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin

    - name: Create Docker
      run: |
        NAMESPACE=${{ secrets.dev_namespace_docker_hub }}
        SERVICE_NAME=debezium-init
        IMAGE_ID=$NAMESPACE/$SERVICE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        if [[ ${{ env.BRANCH_NAME }} == main || ${{ env.BRANCH_NAME }} == master ]]; then
          VERSION=latest
        else
          VERSION=${{ env.BRANCH_NAME }}
        fi
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        cd build/reporting-init/debezium-init
        docker build . -t $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
  reporting-init-es-connect:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup branch and env
      run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

    - name: Log into registry
      run: echo "${{ secrets.release_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin

    - name: Create Docker
      run: |
        NAMESPACE=${{ secrets.dev_namespace_docker_hub }}
        SERVICE_NAME=es-kafka-connect-init
        IMAGE_ID=$NAMESPACE/$SERVICE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        if [[ ${{ env.BRANCH_NAME }} == main || ${{ env.BRANCH_NAME }} == master ]]; then
          VERSION=latest
        else
          VERSION=${{ env.BRANCH_NAME }}
        fi
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        cd build/reporting-init/es-kafka-connect-init
        docker build . -t $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
